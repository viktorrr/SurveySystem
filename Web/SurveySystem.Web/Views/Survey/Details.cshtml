@using SurveySystem.Web.Util
@model SurveySystem.Web.Models.Survey.BasicSurveyDetails

@{
    ViewBag.Title = "title";
}

<div class="row">
        <div class="col-md-12">
            @if (Model == null)
            {
                <p>Невалидна анкета.</p>
            }
            else
            {
                <h1 class="text-center">@Model.Tittle</h1>
                <div class="panel panel-default">
                    <div class="panel-heading">Административни дейности</div>
                    <ul class="list-group">
                        <li class="list-group-item">@Html.ActionLink("Изпрати покана", "Invite", new { id = Model })</li>
                        <li class="list-group-item">@Html.ActionLink("Провери код", "Validate", new { id = Model })</li>
                    </ul>
                </div>
            }
        </div>
    </div>

<div class="row">
    <div class="col-md-12">
        @if (Model != null)
        {
            <div class="table-responsive">
                <table class="table table-striped table-bordered dt-responsive nowrap" id="Data">
                    <thead>
                    <tr>
                        <th>#</th>
                        <th>Име</th>
                        <th>Фамилия</th>
                        <th>Факултетен номер</th>
                        <th>IP</th>
                        <th>Емайл</th>
                        <th>Начало</th>
                        <th>Край</th>
                    </tr>
                    </thead>
                    <tbody>
                    @for (int i = 0; i < Model.Submissions.Count; i++)
                    {
                        <tr>
                            <td>@(i + 1)</td>
                            @if (Model.Submissions[i].Respondent == null)
                            {
                                <td>Анонимен</td>
                                <td>потребител</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                                <td>&nbsp;</td>
                            }
                            else
                            {
                                <td>@Model.Submissions[i].Respondent.FirstName</td>
                                <td>@Model.Submissions[i].Respondent.LastName</td>
                                <td>@Model.Submissions[i].Respondent.FacultyNumber</td>
                                <td>@Model.Submissions[i].Respondent.Email</td>
                                <td>@Model.Submissions[i].Respondent.IP</td>
                            }
                            <td>@Model.Submissions[i].BeganOn</td>
                            <td>@Model.Submissions[i].CompletedOn</td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>
@{
    var questionCounter = 0;
    foreach (var questionMap in Model.QuestionMap)
    {
        <div class="row">
            <h2 class="text-center">@questionMap.Key</h2>

            <div class="col-md-6">
                <canvas id="pie-chart-@(questionCounter)" width="400" height="400"></canvas>
            </div>
            <div class="col-md-6">
                <canvas id="bar-chart-@(questionCounter)" width="400" height="400"></canvas>
            </div>

            <br />
        </div>
        questionCounter++;
    }
}

@section scripts {
    <script>
        var backgroundColors = [
            'rgba(255, 99, 132, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(255, 206, 86, 0.2)',
            'rgba(75, 192, 192, 0.2)',
            'rgba(153, 102, 255, 0.2)',
            'rgba(255, 159, 64, 0.2)'
        ];
        var borderColors = [
            'rgba(255, 99, 132, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
            'rgba(153, 102, 255, 1)',
            'rgba(255, 159, 64, 1)'
        ];

        var ids = [];
        var answers = [];
        var values = [];

        @{
            questionCounter = 0;
        }
        @foreach (var questionMap in Model.QuestionMap)
        {
            @:var answers = @Html.Raw(Html.GeneratePieLabels(questionMap.Value));
            @:var values = @Html.GeneratePieValues(questionMap.Value);

            @:pie(@questionCounter, answers, values.slice());
            @:bar(@questionCounter, answers, values.slice(), '@questionMap.Key');

            questionCounter++;
        }

        function bar(id, answers, values, title) {
            var bgColor = [];
            var borderColor = [];
            var ctx = document.getElementById("bar-chart-" + id).getContext('2d');

            for (var i = 0; i < answers.length / backgroundColors.length; i += 1) {
                bgColor = bgColor.concat(backgroundColors);
                borderColor = borderColor.concat(borderColors);
            }

            console.log(id);
            console.log(answers);
            console.log(values);

            var chartOptions = {
                responsive : true,
                type: 'bar',
                data: {
                    labels: answers,
                    datasets: [
                        {
                            data: values,
                            backgroundColor: bgColor,
                            borderColor: borderColors,
                            borderWidth: 1
                        }
                    ]
                },
                options: {
                    legend: {
                        display: false
                    },
                    scales: {
                        yAxes: [
                            {
                                ticks: {
                                    beginAtZero: true
                                }
                            }
                        ]
                    }
                }
            };

            console.log(JSON.stringify(chartOptions));

            return new Chart(ctx, chartOptions);
        }

        function pie(id, answers, values) {
            var bgColor = [];
            var borderColor = [];
            var ctx = document.getElementById("pie-chart-" + id).getContext('2d');

            for (var i = 0; i < answers.length / backgroundColors.length; i += 1) {
                bgColor = bgColor.concat(backgroundColors);
                borderColor = borderColor.concat(borderColors);
            }

            var chartOptions = {
                responsive : true,
                type: 'pie',
                data: {
                    labels: answers,
                    datasets: [
                        {
                            data: values,
                            backgroundColor: bgColor,
                            borderColor: borderColors,
                            borderWidth: 1
                        }
                    ]
                }

            };

            return new Chart(ctx, chartOptions);
        }
    </script>
}