@using SurveySystem.Data.Models
@using SurveySystem.Web.Util
@model SurveySystem.Web.Models.Survey.SurveySubmission

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Попълване на анкета";
}

<div class="row">
    <div class="col-md-12">
        <h2 class="text-center">@ViewBag.Title</h2>
        @if (Model == null)
        {
            <p>Анкетата не съществува или все още е неактивна.</p>
        }
        else
        {

            @Html.ValidationSummary(true)
            using (Html.BeginForm("Submit", "Survey", new { id = Model.SurveyId }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.BeginsOn)

                var freeTextQuestions = 0;
                var checkboxQuestions = 0;
                var radioButtonQuestions = 0;

                if (Model.Respondent != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(x => x.Respondent.FirstName, "Име", new { @class = "control-label col-sm-2" })
                        <div class="col-md-5">
                            @Html.TextBoxFor(x => x.Respondent.FirstName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.Respondent.FirstName)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Respondent.LastName, "Фамилия", new { @class = "control-label col-sm-2" })
                        <div class="col-md-5">
                            @Html.TextBoxFor(x => x.Respondent.LastName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.Respondent.LastName)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Respondent.Email, "Е-мейл", new { @class = "control-label col-sm-2" })
                        <div class="col-md-5">
                            @Html.TextBoxFor(x => x.Respondent.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.Respondent.Email)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Respondent.FacultyNumber, "Факултетен номер", new { @class = "control-label col-sm-2" })
                        <div class="col-md-5">
                            @Html.TextBoxFor(x => x.Respondent.FacultyNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.Respondent.FacultyNumber)
                        </div>
                    </div>

                }

                for (int i = 0; i < Model.QuestionTypes.Count; i++)
                {
                    if (Model.QuestionTypes[i] == QuestionType.FreeText)
                    {
                        var question = Model.GetFreeTextQuestion(i);

                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.LabelFor(x => x.FreeTextQuestions[freeTextQuestions].Text, Html.FormatQuestion(i, question), new { @class = "control-label" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.TextAreaFor(x => x.FreeTextQuestions[freeTextQuestions].Answer, new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.FreeTextQuestions[freeTextQuestions].Answer)
                                @{
                                    freeTextQuestions++;
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        if (Model.QuestionTypes[i] == QuestionType.Checkbox)
                        {
                            var question = Model.GetCheckBoxQuestion(i);
                            var answers = question.Answers;

                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(x => x.CheckBoxQuestions[checkboxQuestions].Text, Html.FormatQuestion(i, question), new { @class = "control-label" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    @for (int j = 0; j < answers.Count; j++)
                                    {
                                        <label>
                                            @Html.CheckBoxFor(x => x.CheckBoxQuestions[checkboxQuestions].Answered[j], answers[j])
                                            @answers[j]
                                        </label>
                                    }
                                    @{
                                        checkboxQuestions++;
                                    }
                                </div>
                            </div>
                        }
                        else
                        {
                            var question = Model.GetRadioButtonQuestion(i);
                            var answers = question.AvailableAnswers;

                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(x => x.RadioButtonQuestions[radioButtonQuestions].Text, Html.FormatQuestion(i, question), new { @class = "control-label" })
                                </div>
                            </div>


                            <div class="form-group">
                                <div class="col-md-12">
                                    @for (int j = 0; j < answers.Count; j++)
                                    {
                                        @Html.RadioButtonFor(x => x.RadioButtonQuestions[radioButtonQuestions].Answer, answers[j], Html.BuildRadioButtonAnswerAttributes(question, j))
                                        <span>@answers[j]</span>
                                    }
                                    @{
                                        radioButtonQuestions++;
                                    }
                                </div>
                            </div>
                        }
                    }
                }

                <div class="form-group">
                    <div class="col-md-5">
                        <input type="submit" value="Запази" class="btn btn-default" />
                    </div>
                </div>
            }
        }
    </div>
</div>